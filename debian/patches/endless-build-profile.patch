Support debian build profiles

Pass through the build profile defined in the build info to
dpkg-buildpackage. This will set DEB_BUILD_PROFILES in the package
build.

--- a/build
+++ b/build
@@ -74,6 +74,7 @@
 RUNNING_IN_VM=
 RPMLIST=
 RELEASE=
+PROFILE=
 REASON=
 NOROOTFORBUILD=
 LOGFILE=
@@ -954,6 +955,11 @@
 	RELEASE="$ARG"
 	shift
       ;;
+      *-profile)
+	needarg
+	PROFILE="$ARG"
+	shift
+      ;;
       *-logfile)
 	needarg
 	LOGFILE="$ARG"
@@ -1344,6 +1350,7 @@
     test -n "$BUILD_RPMS" && echo Using BUILD_RPMS=$BUILD_RPMS
     echo Using BUILD_ARCH=$BUILD_ARCH
     echo Using RELEASE=$RELEASE
+    echo Using PROFILE=$PROFILE
     test -n "$VM_TYPE" && echo "Doing $VM_TYPE build${VM_IMAGE:+ in $VM_IMAGE}"
     echo
 fi
@@ -2082,9 +2089,16 @@
 #	if [ -n "$BUILD_JOBS" ]; then
 #	    DSC_BUILD_JOBS="-j$BUILD_JOBS"
 #	fi
+
+        # Use a build profile if specified
+	DSC_BUILD_PROFILE=
+	if [ -n "$PROFILE" ]; then
+            DSC_BUILD_PROFILE="-P$PROFILE"
+	fi
+
 	# Adding file so Ubuntu linux kernel package auto-detects it is buildd environment
 	touch $BUILD_ROOT/CurrentlyBuilding
-	DSC_BUILD_CMD="dpkg-buildpackage -b -v${DEBVERSION}~0 -us -uc -rfakeroot $DSC_BUILD_JOBS"
+	DSC_BUILD_CMD="dpkg-buildpackage -b -v${DEBVERSION}~0 -us -uc -rfakeroot $DSC_BUILD_JOBS $DSC_BUILD_PROFILE"
 	if test -e $BUILD_ROOT/$TOPDIR/SOURCES/build.script ; then
 	    echo "Sourcing build.script to build - it should normally run 'dpkg-buildpackage -us -uc -rfakeroot'"
 	    DSC_BUILD_CMD="source $TOPDIR/SOURCES/build.script"
--- a/Build.pm
+++ b/Build.pm
@@ -196,6 +196,7 @@
   $config->{'rawmacros'} = '';
   $config->{'release'} = '<CI_CNT>.<B_CNT>';
   $config->{'repotype'} = [];
+  $config->{'profile'} = '';
   $config->{'patterntype'} = [];
   $config->{'fileprovides'} = {};
   for my $l (@spec) {
@@ -267,6 +268,8 @@
       }
     } elsif ($l0 eq 'repotype:') { #type of generated repository data
       $config->{'repotype'} = [ @l ];
+    } elsif ($l0 eq 'profile:') { #build profile to use
+      $config->{'profile'} = $l[0];
     } elsif ($l0 eq 'type:') { #kind of packaging system (spec, dsc or kiwi)
       $config->{'type'} = $l[0];
     } elsif ($l0 eq 'patterntype:') { #kind of generated patterns in repository
